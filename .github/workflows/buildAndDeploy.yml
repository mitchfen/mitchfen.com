name: Build and Deploy

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

# Set permissions of GITHUB_TOKEN for dependabot
permissions:
  contents: write
  pull-requests: write
  packages: write
  checks: write

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: pwsh

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Cache Nuget packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-packages-${{ hashFiles('Directory.Packages.props') }}
          restore-keys: nuget-packages-

      - name: Build
        run: dotnet run --project ./build/NukeBuild.csproj --target Publish

      - name: Upload output directory
        uses: actions/upload-artifact@v4
        with:
          name: output
          path: ./output
          retention-days: 1

  publish-container:
    if: ${{ github.event_name == 'push' }}
    name: Publish container image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Download output from build job
        uses: actions/download-artifact@v4
        with:
          name: output
          path: output

      - name: Login to ghcr.io
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push image
        run: dotnet run --project ./build/NukeBuild.csproj --target PushContainerImage --skip Publish

  deploy_job:
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed') }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy to Azure
    environment:
      name: 'mitchfen.xyz'
      url: ${{ steps.deploy.outputs.static_web_app_url }}
    steps:
      - name: Download output from build job
        uses: actions/download-artifact@v4
        with:
          name: output
          path: output

      - name: Build And Deploy
        id: deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations
          action: "upload"
          skip_app_build: true # The app has already been built by Nuke
          app_location: "output/wwwroot"
